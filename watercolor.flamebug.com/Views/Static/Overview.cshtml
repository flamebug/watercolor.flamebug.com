@{
    ViewBag.Title = "Overview";
}

@section Styles {
	<link rel="stylesheet" href="@Url.Content("~/Styles/Pages/overview.scss")">
}

@section Scripts {
		<script src="@Url.Content("~/Content/Scripts/prism.js")"></script>
}

<section id="overview-introduction" class="introduction">

	<header class="container">

		<h2>Overview</h2>

		<p>
			Watercolor is built with <a href="http://sass-lang.com/">SCSS</a> to allow it to be modular, efficiently coded, and semantic.  All of the code is organized in modular pieces that minimize the amount of code that you need to write for each new site. Watercolor provides a built-in semantic adaptive grid, a typographic grid, default typographic styles to make your text look great, as well as built in styles for forms, tables, buttons, and a variety of other controls. The aim is to make it easy for you to bring up a new site, letting you focus on HTML semantics and content organization, allowing the site to look great with minimal effort.
		</p>


	</header>

</section>

<section id="overview" class="container">

	<article id="folders">

		<h3>Folder Overview</h3>

		<p>The various <a href="http://sass-lang.com/">SCSS</a> files included in Watercolor are organized into folders based on their usage.  Here is a breakdown of the folders, and how they are used:</p>

		<table class="bordered">

			<thead>
				<tr>
					<th style="width: 25%">folder</th>
					<th>description</th>
				</tr>
			</thead>

			<tbody>

				<tr>
					<td>/</td>
					<td>All global and site specific files should be stored here. By default this folder contains <a href="#style">style.scss</a>, <a href="#site">site.scss</a>, and <a href="#global">global.scss</a>.</td>
				</tr>
				<tr>
					<td>/base</td>
					<td>All stylesheet base files should be stored here, such as global style resets, typographic base styles, and container styles. By default this folder contains <a href="#container">container.scss</a>, <a href="#normalize">normalize.scss</a>, and <a href="#typography">typography.scss</a>.</td>
				</tr>
				<tr>
					<td>/library</td>
					<td>All @@mixin libraries should be stored here. Nothing in this folder should generate static code, the files should only contain computed variables or @@mixins.  By default this folder contains <a href="#grid">grid.scss</a>, and <a href="#helpers">helpers.scss</a>.</td>
				</tr>
				<tr>
					<td>/theme</td>
					<td>All theme specific files should be stored here. By default we've included a <a href="#theme">theme.scss</a> file, as well as layout.scss, controls.scss, and typography.scss for use by the theme.</td>
				</tr>

			</tbody>

		</table>

	</article>

	<article id="files">

		<h3>File Overview</h3>

		<p>Here is a breakdown of the files included in watercolor, and how they are used:</p>

		<table class="bordered">

			<thead>
				<tr>
					<th style="width: 25%">file</th>
					<th>description</th>
				</tr>
			</thead>

			<tbody>

				<tr>
					<td>base/normalize.css</td>
					<td>Watercolor uses <a href="#normalize">normalize.css</a> as a baseline for consistent styling across browsers.</td>
				</tr>
				<tr>
					<td>base/typography.scss</td>
					<td>All typographic base styles are defined in this file, most <code>@@import</code> settings from variables defined in <a href="#global">global.scss</a>.</td>
				</tr>
				<tr>
					<td>base/classes.scss</td>
					<td>All non-semantic classes are found in this file.</td>
				</tr>
				<tr>
					<td>library/grid.scss</td>
					<td>The grid library provides mixins and computed variables that your pages and theme would @@import for setting the structural and typographic grid of the site.</td>
				</tr>
				<tr>
					<td>library/helpers.scss</td>
					<td>The helpers library provides mixins mainly to simplify styles such as cross-browser prefixes.</td>
				</tr>
				<tr>
					<td>library/tables.scss</td>
					<td>All table related mixins are defined in this file.</td>
				</tr>
				<tr>
					<td>templates/template.scss</td>
					<td>All templates should contain a <a href="#theme">template.scss</a> file which includes all styles for the template.</td>
				</tr>
				<tr>
					<td>site/site.scss</td>
					<td>This is where all site-wide common styles that are not related to the theme are stored.</td>
				</tr>
				<tr>
					<td>container.scss</td>
					<td>This is where the container breakpoints for the structural grid are defined.</td>
				</tr>
				<tr>
					<td>global.scss</td>
					<td>All globally referenced variables should be defined here. By default this contains variables for defining the structural and typographic grid, typographic elements, and other common variables that will be used throughout the site.</td>
				</tr>
				<tr>
					<td>style.scss</td>
					<td>This file pulls everything together into a single stylesheet for delivery to the browser.</td>
				</tr>

			</tbody>

		</table>

	</article>

	<article id="normalize">

		<h3>base/normalize.css</h3>

		<p>Watercolor uses <a href="http://necolas.github.io/normalize.css/">normalize.css</a> as a baseline for consistent styling across browsers.  <a href="http://necolas.github.io/normalize.css/">Normalize.css</a> has become the gold standard for beginning with a consistent cross-browser experience, which allows Watercolor to extend that consistent platform for a beautiful and consistent framework for your site.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/Base/normalize.css")))</code></pre>

	</article>

	<article id="typography">

		<h3>base/typography.scss</h3>

		<p>All typographic base styles are defined in this file, most <code>@@import</code> settings from variables defined in <a href="#global">global.scss</a>.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/Base/typography.scss")))</code></pre>

	</article>

	<article id="forms">

		<h3>base/classes.scss</h3>

		<p>All non-semantic classes are found in this file.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/Base/classes.scss")))</code></pre>

	</article>

	<article id="grid">

		<h3>library/grid.scss</h3>

		<p>The grid library provides mixins and computed variables that your pages and theme would @@import for setting the structural and typographic grid of the site.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/Library/grid.scss")))</code></pre>

	</article>

	<article id="helpers">

		<h3>library/helpers.scss</h3>

		<p>The helpers library provides mixins mainly to simplify styles such as cross-browser prefixes.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/Library/helpers.scss")))</code></pre>

	</article>

	<article id="tables">

		<h3>library/tables.scss</h3>

		<p>All table related mixins are defined in this file.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/Library/tables.scss")))</code></pre>

	</article>

	<article id="template">

		<h3>templates/template.scss</h3>

		<p>All templates should contain a template.scss file which includes all styles for the template.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/Templates/template.scss")))</code></pre>

	</article>

	<article id="site">

		<h3>site/site.scss</h3>

		<p>This is where all site-wide common styles that are not related to the theme are stored.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/Site/site.scss")))</code></pre>

	</article>

	<article id="container">

		<h3>container.scss</h3>

		<p>This is where the container breakpoints for the structural grid are defined.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/container.scss")))</code></pre>

	</article>

	<article id="global">

		<h3>global.scss</h3>

		<p>All globally referenced variables should be defined here. By default this contains variables for defining the structural and typographic grid, typographic elements, and other common variables that will be used throughout the site.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/global.scss")))</code></pre>

	</article>

	<article id="style">

		<h3>style.scss</h3>

		<p>This file pulls everything together into a single stylesheet for delivery to the browser.</p>

		<pre><code class="language-css">@Html.Raw(File.ReadAllText(Server.MapPath("~/Content/Styles/style.scss")))</code></pre>

	</article>

</section>

