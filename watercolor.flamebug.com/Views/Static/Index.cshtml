@{
    ViewBag.Title = "";
}

@section Styles {
	<link rel="stylesheet" href="@Url.Content("~/Styles/Pages/home.scss")">
}

<section id="home-introduction" class="introduction">

	<header class="container">

		<img src="@Url.Content("~/Content/Images/flamebug-Logo.png")" />
		<h1>Watercolor</h1>
		<a href="/download">Download Watercolor</a>

	</header>

</section>

<section id="basics">

	<header class="container">

		<h2>Introducing Watercolor</h2>
		<p>A robust, dead simple way to start your website. Worry about your site, not making .</p>

	</header>

</section>

<section id="layout">

	<header class="container">

		<h2>Adaptive Layout</h2>
		<p>Watercolor is based on an adaptive grid that allows a content-first approach to website design on a variety of screen sizes and devices. Unlike traditional responsive grids, which have a fixed number of columns, adaptive grids allow columns to be added as additional screen real estate becomes available. This flexibility allows the designer the ability to organize the content in a way that looks best on different sized screens, rather than the one-size-fits-all approach of responsive grids. Resize your browser, or change your device orientation and watch the grid demo below to get an idea of how the adaptive grid works.</p>

	</header>

	<figure id="infinite">

		<div class="col1"></div>
		<div class="col2"></div>
		<div class="col3"></div>
		<div class="col4"></div>
		<div class="col5"></div>
		<div class="col6"></div>
		<div class="col7"></div>
		<div class="col8"></div>
		<div class="col9"></div>
		<div class="col10"></div>
		<div class="col11"></div>
		<div class="col12"></div>
		<div class="col13"></div>
		<div class="col14"></div>
		<div class="col15"></div>
		<div class="col16"></div>
		<div class="col17"></div>
		<div class="col18"></div>
		<div class="col19"></div>
		<div class="col20"></div>
		<div class="col21"></div>
		<div class="col22"></div>
		<div class="col23"></div>
		<div class="col24"></div>
		<div class="col25"></div>
		<div class="col26"></div>
		<div class="col27"></div>
		<div class="col28"></div>
		<div class="col29"></div>
		<div class="col30"></div>
		<div class="col31"></div>
		<div class="col32"></div>
		<div class="col33"></div>
		<div class="col34"></div>
		<div class="col35"></div>
		<div class="col36"></div>

	</figure>

</section>

<section id="typography">

	<header class="container">

		<h2>Beautiful Typography</h2>
		<p>It's no secret: browser-default typographic styles are ugly. Watercolor fixes that by providing styles that will beautify your typography without the need for any custom code. This example demonstrates how Watercolor can transform a document from the basic, rather ugly, browser default to a great looking document &ndash; the only difference is the inclusion of the Watercolor styles.</p>

	</header>

	<div class="container" style="text-align: center;">
		
		<figure class="screenshot">

			<img src="/Content/Images/Document-Basic.png" />
		
		</figure>
		
		<div id="arrow">
			<img src="/Content/Images/right-arrow.png" />
		</div>

		<figure class="screenshot">

			<img src="/Content/Images/Document-Enhanced.png" />

		</figure>

	</div>

</section>

<section id="forms">

	<header class="container">

		<h2>Usable Forms</h2>
		<p>Anyone who has used the web will know: forms can be awful. Watercolor simplifies the creation of forms by providing a semantic guideline for form markup, and styles that can quickly turn that markup into a highly usable form that is a pleasure to use.</p>

	</header>

</section>

<section id="controls">

	<header class="container">

		<h2>Consistent Controls</h2>
		<p>While the basic elements and controls </p>

	</header>

</section>