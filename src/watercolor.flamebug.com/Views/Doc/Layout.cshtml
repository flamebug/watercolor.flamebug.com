@{
    ViewBag.Title = "Layout";
}

@section Styles {
	<link rel="stylesheet" href="~/css/pages/layout.css">
}

@section Scripts {
		<script src="~/lib/prism/prism.js"></script>
}

<section id="layout-demo">

	<div class="container">

		<h2>Layout</h2>

		<p>
			Watercolor is based on an adaptive grid that allows a content-first approach to website design on a variety of screen sizes and devices.
			Unlike traditional responsive grids, which have a fixed number of columns, adaptive grids allow columns to be added as additional
			screen real estate becomes available. This flexibility allows the designer the ability to organize the content in a way that looks best
			on different sized screens, rather than the one-size-fits-all approach of responsive grids.  Resize your browser, or change your device
			orientation and watch the grid demo below to get an idea of how the adaptive grid works.
		</p>

	</div>
	
	<figure id="infinite">

		<div class="col1"></div>
		<div class="col2"></div>
		<div class="col3"></div>
		<div class="col4"></div>
		<div class="col5"></div>
		<div class="col6"></div>
		<div class="col7"></div>
		<div class="col8"></div>
		<div class="col9"></div>
		<div class="col10"></div>
		<div class="col11"></div>
		<div class="col12"></div>
		<div class="col13"></div>
		<div class="col14"></div>
		<div class="col15"></div>
		<div class="col16"></div>
		<div class="col17"></div>
		<div class="col18"></div>
		<div class="col19"></div>
		<div class="col20"></div>
		<div class="col21"></div>
		<div class="col22"></div>
		<div class="col23"></div>
		<div class="col24"></div>
		<div class="col25"></div>
		<div class="col26"></div>
		<div class="col27"></div>
		<div class="col28"></div>
		<div class="col29"></div>
		<div class="col30"></div>
		<div class="col31"></div>
		<div class="col32"></div>
		<div class="col33"></div>
		<div class="col34"></div>
		<div class="col35"></div>
		<div class="col36"></div>

	</figure>

</section>

<section id="grid-settings">

    <div class="container">

		<h3>Grid Settings</h3>

		<p>Default column and gutter sizes are defined in <a href="/overview#global">global.scss</a> and are the basis for the structural grid.  By default one column, including the gutter, is <code>5rem</code> wide, or 80px at the default 100% body font size.</p>

		<table class="bordered">

			<thead>
				<tr>
					<th style="width: 25%">variable</th>
					<th>description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><code>$column-width</code></td>
					<td>This defines the width of the column, excluding the gutter. Default value: <code>3.5rem</code>.</td>
				</tr>
				<tr>
					<td><code>$gutter-width</code></td>
					<td>This defines the width of the gutter. Usually it looks best if the gutter is about half the width of the column. Default value: <code>1.5rem</code>.</td>
				</tr>
			</tbody>

		</table>

    </div>

</section>

<section id="mixins">

    <div class="container">

		<h3>Grid Mixins</h3>

		<p>The grid @@mixins are defined in <a href="/overview#grid">grid.scss</a> and provide two main @@mixins for sizing content.  The third @@mixin is used in <a href="/overview#container">container.scss</a> for defining the container breakpoints.</p>

		<table class="bordered">

			<thead>
				<tr>
					<th style="width: 25%">mixin</th>
					<th>description</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td><code>column($cols)</code></td>
					<td>This is the main @@mixin for sizing content. The <code>$cols</code> parameter defines how many columns the content takes up in the grid.</td>
				</tr>
					<tr>
					<td><code>max-column</code></td>
					<td>This @@mixin allows the content fill the entire grid, regardless of the number of columns. This would commonly be used as a default content size at smaller breakpoints, or for block elements that need to always fill the container width, such as headers and footers.</td>
				</tr>
				<tr>
					<td><code>page-width($cols)</code></td>
					<td>This @@mixin is used to size the <code>container</code> class at various breakpoints. The <code>$cols</code> parameter defines how many columns make up the container.</td>
				</tr>
			</tbody>

		</table>

    </div>

</section>

<section id="column-breakpoint">

    <div class="container">

		<h3>Container Breakpoints</h3>

		<p>Default breakpoints are defined in <a href="/overview#container">container.scss</a> and provided to adapt to common devices, orientations, and resolutions.  The defaults are based on a default body font size of 100%, or 16px, which makes the math pretty easy as most common resolutions are a multiple of that in size.  If you change the base font size you'll want to adjust the default container definitions accordingly.</p>

		<table class="bordered">

			<thead>
				<tr>
					<th>cols</th>
					<th>rems</th>
					<th>device</th>
				</tr>
			</thead>

			<tbody>

				<tr>
					<td>4</td>
					<td>20rem</td>
					<td>Mobile Portrait</td>
				</tr>
				<tr>
					<td>6</td>
					<td>30rem</td>
					<td>Mobile Landscape</td>
				</tr>
				<tr>
					<td>8</td>
					<td>40rem</td>
					<td>Tablet Portrait</td>
				</tr>
				<tr>
					<td>12</td>
					<td>60rem</td>
					<td>Tablet Landscape / Small Desktop</td>
				</tr>
				<tr>
					<td>16</td>
					<td>80rem</td>
					<td>Large Desktop</td>
				</tr>
			</tbody>

		</table>

    </div>

</section>

<section id="auto-example">

    <div class="container">

		<header>
			<h3>Automatic-Width Columns</h3>
		</header>
			
		<figure>
			
			<div>&nbsp;</div>

		</figure>

		<figure>
			
			<div>&nbsp;</div>
			<div>&nbsp;</div>
				
		</figure>
		
		<figure>
			
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			
		</figure>
	
		<figure>
			
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			
		</figure>
		
		<pre><code class="language-css">
figure {
	@@include grid;
	
	div {
		@@include column;
	}
}</code></pre>
			
    </div>

</section>

<section id="fixed-example">

    <div class="container">

		<header>
			<h3>Fixed-Width Columns</h3>
		</header>

		<figure>

			<div class="one">&nbsp;</div>
			<div>&nbsp;</div>

		</figure>

		<figure>

			<div class="two">&nbsp;</div>
			<div>&nbsp;</div>
			
		</figure>
		
		<figure>

			<div class="three">&nbsp;</div>
			<div>&nbsp;</div>
			
		</figure>
		
		<figure>

			<div class="four">&nbsp;</div>
			<div>&nbsp;</div>
			
		</figure>
		
		<pre><code class="language-css">
figure {
	@@include grid;
	
	div {
		@@include column;
		
		&.one {
			@@include column(1);
		}
		&.two {
			@@include column(2);
		}
		&.three {
			@@include column(3);
		}
		&.four { 
			@@include column(4);
            
            ~ div {
                display: none;
        
                @@include breakpoint(small) {
                    display: block;
                }     
            }
		}
	}
}</code></pre>

    </div>

</section>

<section id="wrap-example">

    <div class="container">

		<header>
			<h3>Column Wrapping</h3>
		</header>

		<figure>

			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			<div>&nbsp;</div>
			
		</figure>

		<pre><code class="language-css">
figure {
	@@include grid;
	
	div {
		@@include column(2);
	}
}</code></pre>

    </div>

</section>



<section id="nested-example">

    <div class="container">

		<header>
			<h3>Nested Columns</h3>
		</header>
	
		<figure>
			
			<div>
				
				<figure>
			
					<div>
						
						<figure>
					
							<div>&nbsp;</div>
							<div>&nbsp;</div>
							
						</figure>	
									
					</div>
					
					<div>
						
						<figure>
					
							<div>&nbsp;</div>
							
						</figure>
						
					</div>
					
				</figure>
				
			</div>
			
		</figure>

		<pre><code class="language-markup">
figure {
	@@include grid;
	
	div {
		@@include column;
	}
}</code></pre>
		
		<pre><code class="language-css">
figure {
	@@include grid;
	
	div {
		@@include column;
	}
}</code></pre>
			
    </div>

</section>

<section id="prefix-example">

    <div class="container">

		<header>
			<h3>Column Prefixes</h3>
		</header>
		
		<figure>
			
			<div id="one-prefix">&nbsp;</div>
			<div id="two-prefix">&nbsp;</div>
			<div id="three-prefix">&nbsp;</div>
			<div id="four-prefix">&nbsp;</div>
			
		</figure>	

    </div>

</section>

<section id="suffix-example">

    <div class="container">

		<header>
			<h3>Column Suffixes</h3>
		</header>
		
		<figure>
			
			<div id="one-suffix">&nbsp;</div>
			<div id="two-suffix">&nbsp;</div>
			<div id="three-suffix">&nbsp;</div>
			<div id="four-suffix">&nbsp;</div>
				
		</figure>

    </div>

</section>