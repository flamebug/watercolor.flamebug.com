section#error {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: relative;
  height: 100vh;
  padding: 0;
  background-color: #ea9462;
  color: #fff;
  text-align: center;
}
section#error .container {
  -webkit-animation-name: slide-in;
          animation-name: slide-in;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
          animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
}
section#error img {
  display: block;
  width: 200px;
  margin: 1.625em auto;
  opacity: .1;
}
section#error h1 {
  line-height: 1.1;
  letter-spacing: -2px;
  color: inherit;
  display: block;
  float: none;
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}
section#error h1 small {
  display: block;
  font-size: .5em;
  letter-spacing: 0;
  opacity: .5;
}

/* Standard syntax */
@-webkit-keyframes slide-in {
  from {
    opacity: 0;
    -webkit-transform: translate(0, -100%);
            transform: translate(0, -100%);
  }
  to {
    opacity: 1;
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0);
  }
}
@keyframes slide-in {
  from {
    opacity: 0;
    -webkit-transform: translate(0, -100%);
            transform: translate(0, -100%);
  }
  to {
    opacity: 1;
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0);
  }
}



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2VzL2Vycm9yLnNjc3MiLCJzaXRlL3NldHRpbmdzL19wYWxldHRlLnNjc3MiLCJlcnJvci5jc3MiLCJ3YXRlcmNvbG9yL21vZHVsZXMvX2dyaWQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQTtFQUNJLHFCQUFhO0VBQWIsc0JBQWE7RUFBYixxQkFBYTtFQUFiLGNBQWE7RUFDYiwwQkFBbUI7RUFBbkIsNEJBQW1CO01BQW5CLHVCQUFtQjtVQUFuQixvQkFBbUI7RUFDbkIseUJBQXVCO0VBQXZCLGdDQUF1QjtNQUF2QixzQkFBdUI7VUFBdkIsd0JBQXVCO0VBQzFCLG1CQUFrQjtFQUNmLGNBQWE7RUFDYixXQUFVO0VBQ2IsMEJDVnNCO0VEV3RCLFlBQVc7RUFDWCxtQkFBa0I7Q0VObEI7QUZRRztFQUNJLGlDQUF3QjtVQUF4Qix5QkFBd0I7RUFDeEIsK0JBQXNCO1VBQXRCLHVCQUFzQjtFQUN0QixzRUFBNkQ7VUFBN0QsOERBQTZEO0NFTnBFO0FGU0c7RUFDSSxlQUFjO0VBQ2QsYUFBWTtFQUNaLHFCQUErQjtFQUMvQixZQUFXO0NFUGxCO0FGVUE7RUFDQyxpQkFBZ0I7RUFDaEIscUJBQW9CO0VBQ3BCLGVBQWM7RUdyQmQsZUFBYztFQUNkLFlBQVc7RUFpQloscUJBQTRFO0VBUTVFLHNCQUE2RTtDRFQ3RTtBRlFPO0VBQ0ksZUFBYztFQUNwQixnQkFBZTtFQUNmLGtCQUFpQjtFQUNqQixZQUFXO0NFTmhCOztBQUVELHFCQUFxQjtBRlVyQjtFQUVJO0lBQ0ksV0FBVTtJQUNWLHVDQUE4QjtZQUE5QiwrQkFBOEI7R0VUbkM7RUZXQztJQUNJLFdBQVU7SUFDVixtQ0FBMEI7WUFBMUIsMkJBQTBCO0dFVC9CO0NBQ0Y7QUZBRDtFQUVJO0lBQ0ksV0FBVTtJQUNWLHVDQUE4QjtZQUE5QiwrQkFBOEI7R0VUbkM7RUZXQztJQUNJLFdBQVU7SUFDVixtQ0FBMEI7WUFBMUIsMkJBQTBCO0dFVC9CO0NBQ0YiLCJmaWxlIjoicGFnZXMvZXJyb3IuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcInNpdGUvc2V0dGluZ3NcIjtcclxuQGltcG9ydCBcIndhdGVyY29sb3IvbW9kdWxlcy9ncmlkXCI7XHJcblxyXG4vL1xyXG4vLyBFcnJvclxyXG4vL1xyXG5cclxuc2VjdGlvbiNlcnJvciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xyXG5cdGNvbG9yOiAjZmZmO1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIFxyXG4gICAgLmNvbnRhaW5lciB7XHJcbiAgICAgICAgYW5pbWF0aW9uLW5hbWU6IHNsaWRlLWluO1xyXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XHJcbiAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMTY1LCAwLjg0LCAwLjQ0LCAxKTtcclxuICAgIH1cclxuXHJcbiAgICBpbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBtYXJnaW46ICRsaW5lLWhlaWdodCAqIDFlbSBhdXRvO1xyXG4gICAgICAgIG9wYWNpdHk6IC4xO1xyXG4gICAgfVxyXG5cclxuXHRoMSB7XHJcblx0XHRsaW5lLWhlaWdodDogMS4xO1xyXG5cdFx0bGV0dGVyLXNwYWNpbmc6IC0ycHg7XHJcblx0XHRjb2xvcjogaW5oZXJpdDtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgY29sdW1uKG1heCk7XHJcblxyXG4gICAgICAgIHNtYWxsIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcblx0XHQgICAgZm9udC1zaXplOiAuNWVtO1xyXG5cdFx0ICAgIGxldHRlci1zcGFjaW5nOiAwO1xyXG5cdFx0ICAgIG9wYWNpdHk6IC41O1xyXG4gICAgICAgIH1cclxuXHR9XHJcbn1cclxuXHJcbi8qIFN0YW5kYXJkIHN5bnRheCAqL1xyXG5Aa2V5ZnJhbWVzIHNsaWRlLWluIHtcclxuXHJcbiAgICBmcm9tIHtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC0xMDAlKTtcclxuICAgIH1cclxuICAgIHRvIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApO1xyXG4gICAgfVxyXG5cclxufVxyXG4iLCIvL1xyXG4vLyBQYWxldHRlXHJcbi8vXHJcblxyXG4kcHJpbWFyeS1jb2xvcjogI2VhOTQ2MjtcclxuJHNlY29uZGFyeS1jb2xvcjogIzhjYmZkZTsiLCJzZWN0aW9uI2Vycm9yIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgcGFkZGluZzogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWE5NDYyO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5zZWN0aW9uI2Vycm9yIC5jb250YWluZXIge1xyXG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZS1pbjtcclxuICBhbmltYXRpb24tZHVyYXRpb246IDFzO1xyXG4gIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSk7XHJcbn1cclxuc2VjdGlvbiNlcnJvciBpbWcge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAyMDBweDtcclxuICBtYXJnaW46IDEuNjI1ZW0gYXV0bztcclxuICBvcGFjaXR5OiAuMTtcclxufVxyXG5zZWN0aW9uI2Vycm9yIGgxIHtcclxuICBsaW5lLWhlaWdodDogMS4xO1xyXG4gIGxldHRlci1zcGFjaW5nOiAtMnB4O1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZsb2F0OiBub25lO1xyXG4gIG1hcmdpbi1sZWZ0OiAwLjc1cmVtO1xyXG4gIG1hcmdpbi1yaWdodDogMC43NXJlbTtcclxufVxyXG5zZWN0aW9uI2Vycm9yIGgxIHNtYWxsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBmb250LXNpemU6IC41ZW07XHJcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XHJcbiAgb3BhY2l0eTogLjU7XHJcbn1cclxuXHJcbi8qIFN0YW5kYXJkIHN5bnRheCAqL1xyXG5Aa2V5ZnJhbWVzIHNsaWRlLWluIHtcclxuICBmcm9tIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMTAwJSk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4iLCIvL1xyXG4vLyBEZWZhdWx0c1xyXG4vL1xyXG5cclxuQGltcG9ydCBcIi4uL2RlZmF1bHRzL2dyaWRcIjtcclxuXHJcbi8vXHJcbi8vIFNldCB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgYW4gZWxlbWVudCBzcGFucyBvbiB0aGUgZ3JpZFxyXG4vL1xyXG5cclxuQG1peGluIGNvbHVtbigkY29sczogbWF4LCAkcHJlZml4OiAwLCAkc3VmZml4OiAwKSB7XHJcblx0XHJcblx0QGlmICRjb2xzID09IG1heCB7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGZsb2F0OiBub25lO1xyXG5cdH1cclxuXHRAZWxzZSB7XHJcblx0XHRkaXNwbGF5OiBpbmxpbmU7XHJcblx0XHRmbG9hdDogbGVmdDtcclxuXHRcdHdpZHRoOiAkY29scyAqICgkY29sdW1uLXdpZHRoICsgJGd1dHRlci13aWR0aCkgLSAkZ3V0dGVyLXdpZHRoO1xyXG5cdH1cclxuXHRcclxuXHRAaW5jbHVkZSBjb2x1bW4tcHJlZml4KCRwcmVmaXgpO1xyXG5cdEBpbmNsdWRlIGNvbHVtbi1zdWZmaXgoJHN1ZmZpeCk7XHJcbn1cclxuXHJcbi8vXHJcbi8vIFNldCB0aGUgbnVtYmVyIG9mIGVtcHR5IGNvbHVtbnMgdGhhdCBzaG91bGQgcHJlZml4IHRoZSBlbGVtZW50IG9uIHRoZSBncmlkXHJcbi8vXHJcblxyXG5AbWl4aW4gY29sdW1uLXByZWZpeCgkY29scykge1xyXG5cdG1hcmdpbi1sZWZ0OiAoJGNvbHMgKiAoJGNvbHVtbi13aWR0aCArICRndXR0ZXItd2lkdGgpKSArICgkZ3V0dGVyLXdpZHRoIC8gMik7XHJcbn1cclxuXHJcbi8vXHJcbi8vIFNldCB0aGUgbnVtYmVyIG9mIGVtcHR5IGNvbHVtbnMgdGhhdCBzaG91bGQgZm9sbG93IHRoZSBlbGVtZW50IG9uIHRoZSBncmlkXHJcbi8vXHJcblxyXG5AbWl4aW4gY29sdW1uLXN1ZmZpeCgkY29scykge1xyXG5cdG1hcmdpbi1yaWdodDogKCRjb2xzICogKCRjb2x1bW4td2lkdGggKyAkZ3V0dGVyLXdpZHRoKSkgKyAoJGd1dHRlci13aWR0aCAvIDIpO1xyXG59XHJcblxyXG4vL1xyXG4vLyBCdWlsZCB0aGUgY29udGFpbmVyIGJhc2VkIG9uIHRoZSBicmVha3BvaW50IHNldHRpbmdzXHJcbi8vXHJcblxyXG5AbWl4aW4gY29udGFpbmVyKCkge1xyXG5cdG1hcmdpbjogMCBhdXRvO1xyXG5cclxuXHRAZWFjaCAkc2l6ZSwgJGNvbHMgaW4gJGJyZWFrcG9pbnRzIHtcclxuXHRcdFx0XHRcclxuXHRcdEBpZiAkc2l6ZSA9PSBkZWZhdWx0IHtcclxuXHRcdFx0d2lkdGg6ICRjb2xzICogKCRjb2x1bW4td2lkdGggKyAkZ3V0dGVyLXdpZHRoKTtcclxuXHRcdH1cclxuXHRcdEBlbHNlIHtcclxuXHRcdFx0QGluY2x1ZGUgYnJlYWtwb2ludCgkc2l6ZSkge1xyXG5cdFx0XHRcdHdpZHRoOiAkY29scyAqICgkY29sdW1uLXdpZHRoICsgJGd1dHRlci13aWR0aCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHRcclxufVxyXG5cclxuLy9cclxuLy8gSW5zZXJ0IHRoZSBnaXZlbiBjb250ZW50IHdpdGhpbiBhIG1lZGlhIHF1ZXJ5IGdpdmVuIHRoZSBicmVha3BvaW50IHNpemVcclxuLy9cclxuXHJcbkBtaXhpbiBicmVha3BvaW50KCRwb2ludCkge1xyXG5cdCRicmVhazogKCRjb2x1bW4td2lkdGggKyAkZ3V0dGVyLXdpZHRoKSAqIG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkcG9pbnQpICsgJGd1dHRlci13aWR0aDtcclxuXHRcclxuXHRAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWspIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuLy9cclxuLy8gY2xlYXIgYW55IGNoaWxkcmVuIHdpdGhpbiB0aGUgZWxlbWVudFxyXG4vL1xyXG5cclxuQG1peGluIGNsZWFyLWNoaWxkcmVuKCkge1xyXG5cdCY6YWZ0ZXIge1xyXG5cdFx0Y29udGVudDogXCJcIjtcclxuXHRcdGRpc3BsYXk6IHRhYmxlO1xyXG5cdFx0Y2xlYXI6IGJvdGg7XHJcblx0fVxyXG59XHJcblxyXG4vL1xyXG4vLyBEZWZpbmUgdGhlIGZvbnQgc3R5bGVzIHRoYXQgcG9zaXRpb24gdGhlIGZvbnQgd2l0aGluIHRoZSB0eXBvZ3JhcGhpYyBncmlkXHJcbi8vXHJcblxyXG5AbWl4aW4gZm9udC1zaXplKCRzaXplKSB7XHJcblx0Zm9udC1zaXplOiAkc2l6ZSAqIDFlbTtcclxuXHRsaW5lLWhlaWdodDogbGluZS1oZWlnaHQoJHNpemUpO1xyXG5cdG1hcmdpbi10b3A6ICRsaW5lLWhlaWdodCAvICRzaXplICogMWVtO1xyXG5cdG1hcmdpbi1ib3R0b206ICRsaW5lLWhlaWdodCAvICRzaXplICogMWVtO1xyXG59XHJcblxyXG4vL1xyXG4vLyBDYWxjdWxhdGUgdGhlIGxpbmUgaGVpZ2h0IHRoYXQgd2lsbCBtYWludGFpbiB2ZXJ0aWNhbCByaHl0aG0gZm9yIHRoZSBmb250IHNpemVcclxuLy9cclxuXHJcbkBmdW5jdGlvbiBsaW5lLWhlaWdodCgkc2l6ZSkge1xyXG5cdCRsaW5lcy1uZWVkZWQ6IGNlaWwoJHNpemUgLyAkbGluZS1oZWlnaHQpO1xyXG5cclxuXHRAcmV0dXJuICgkbGluZS1oZWlnaHQgLyAkc2l6ZSAqICRsaW5lcy1uZWVkZWQpO1xyXG59XHJcblxyXG4vL1xyXG4vLyBDb252ZXJ0IFBpeGVscyB0byBFbSB1bml0cyAodW5pdGxlc3MpXHJcbi8vXHJcblxyXG5AZnVuY3Rpb24gZW0oJHBpeGVscywgJGJhc2U6ICRiYXNlLWZvbnQtc2l6ZSkge1xyXG5cdEByZXR1cm4gJHBpeGVscyAvICgkYmFzZSAqIDE2KTtcclxufVxyXG5cclxuLy9cclxuLy8gQ29udmVydCBFbSB1bml0cyB0byBQaXhlbHMgKHVuaXRsZXNzKVxyXG4vL1xyXG5cclxuQGZ1bmN0aW9uIHB4KCRlbXMsICRiYXNlOiAkYmFzZS1mb250LXNpemUpIHtcclxuXHRAcmV0dXJuICRlbXMgKiAkYmFzZSAqIDE2O1xyXG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */