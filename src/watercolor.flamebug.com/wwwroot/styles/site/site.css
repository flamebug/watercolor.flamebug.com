/*
Copyright (c) Nicolas Gallagher and Jonathan Neal

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
@import url(http://fonts.googleapis.com/css?family=Roboto:400,300,100);
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

body {
  line-height: 1.625;
  font-size: 1em;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  color: #4e585b;
}

p {
  margin-top: 1.625em;
  margin-bottom: 1.625em;
}

h1 {
  font-size: 3.4375em;
  line-height: 1.41818;
  margin-top: 0.47273em;
  margin-bottom: 0.47273em;
  font-family: "Roboto", sans-serif;
  font-weight: 500;
  color: inherit;
}

h2 {
  font-size: 2.625em;
  line-height: 1.2381;
  margin-top: 0.61905em;
  margin-bottom: 0.61905em;
  font-family: "Roboto", sans-serif;
  font-weight: 500;
  color: inherit;
}

h3 {
  font-size: 2.125em;
  line-height: 1.52941;
  margin-top: 0.76471em;
  margin-bottom: 0.76471em;
  font-family: "Roboto", sans-serif;
  font-weight: 500;
  color: inherit;
}

h4 {
  font-size: 1.625em;
  line-height: 1;
  margin-top: 1em;
  margin-bottom: 1em;
  font-family: "Roboto", sans-serif;
  font-weight: 500;
  color: inherit;
}

h5 {
  font-size: 1.3125em;
  line-height: 1.2381;
  margin-top: 1.2381em;
  margin-bottom: 1.2381em;
  font-family: "Roboto", sans-serif;
  font-weight: 500;
  color: inherit;
}

h6 {
  font-size: 1em;
  line-height: 1.625;
  margin-top: 1.625em;
  margin-bottom: 1.625em;
  font-family: "Roboto", sans-serif;
  font-weight: 500;
  color: inherit;
}

a {
  color: #25AAE1;
  text-decoration: none;
  -webkit-transition: all 0.1s linear;
          transition: all 0.1s linear;
}
a:hover {
  color: #058Ac1;
}

ul,
ol,
dl {
  font-size: 1em;
  line-height: 1.625;
  margin-top: 1.625em;
  margin-bottom: 1.625em;
}

dt {
  font-weight: bold;
}

dd + dt {
  margin-top: 1.625em;
}

blockquote {
  margin-top: 1.625em;
  margin-bottom: 1.625em;
  padding-left: 1em;
  border-left-width: 0.25em;
  border-left-style: solid;
  border-left-color: #eee;
  border-radius: 0;
}

pre,
code,
kbd,
samp,
tt {
  font-size: 1em;
  font-family: monospace, sans-serif;
  font-weight: normal;
  color: inherit;
  direction: ltr;
  text-align: left;
  word-spacing: normal;
  -moz-tab-size: 4;
    -o-tab-size: 4;
       tab-size: 4;
  -webkit-hyphens: none;
     -moz-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  vertical-align: top;
}

pre {
  position: relative;
  overflow: auto;
  margin-top: 1.5625em;
  margin-bottom: 1.5625em;
  padding: 0 .5em;
  line-height: 1.625;
  border-width: 1px;
  border-style: solid;
  border-color: #eee;
  border-radius: 0;
  background: rgba(0, 0, 0, 0.01);
  white-space: pre;
}
pre code {
  padding: 0;
  border: 0;
  background: transparent;
}

code {
  padding: .1666em .3333em;
  border-width: 1px;
  border-style: solid;
  border-color: #eee;
  border-radius: 0;
  background: rgba(0, 0, 0, 0.01);
}

img {
  max-width: 100%;
  border-color: #eee;
}

hr {
  border-color: #eee;
}

table {
  max-width: 100%;
  width: 100%;
  margin-top: 1.625em;
  margin-bottom: 1.625em;
  border-collapse: separate;
}
table th,
table td {
  padding: 0 0.8125em;
  line-height: 1.5625;
  border-top-width: 1px;
  border-top-style: solid;
  border-top-color: #eee;
  text-align: left;
  vertical-align: top;
}
table th {
  font-weight: bold;
  vertical-align: bottom;
}
table caption + thead tr:first-child th,
table caption + thead tr:first-child td,
table colgroup + thead tr:first-child th,
table colgroup + thead tr:first-child td,
table thead:first-child tr:first-child th,
table thead:first-child tr:first-child td {
  line-height: 1.625;
  border-top: 0;
}
table tbody + tbody {
  border-top-width: 2px;
  border-top-style: solid;
  border-top-color: #eee;
}
table table {
  background-color: #fff;
}

fieldset {
  margin: 1.5625em 0;
  padding: 0 1.625em;
  border-color: #eee;
}

textarea,
select,
input[type="color"],
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="file"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"] {
  box-sizing: border-box;
  margin: -1px 0;
  padding: 0 .375em;
  border-width: 1px;
  border-style: solid;
  border-color: #eee;
  border-radius: 0.2em;
  background-color: #fff;
  font: inherit;
  color: #777;
}
textarea:focus,
select:focus,
input[type="color"]:focus,
input[type="date"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="email"]:focus,
input[type="file"]:focus,
input[type="month"]:focus,
input[type="number"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="text"]:focus,
input[type="time"]:focus,
input[type="url"]:focus,
input[type="week"]:focus {
  color: #000;
}

input:invalid,
textarea:invalid {
  border-color: red;
}

select {
  padding: 0.125em 0 0.0625em 0.375em;
}

button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
  display: inline-block;
  position: relative;
  padding: 0 .75em;
  margin: -1px 0;
  border-radius: 0.25em;
  box-shadow: inset 0 1px rgba(255, 255, 255, 0.4), 0 1px 0.2em rgba(0, 0, 0, 0.1);
  font-size: inherit;
  font-weight: inherit;
  text-decoration: none;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
  line-height: 1.625;
  cursor: pointer;
  text-align: center;
  white-space: nowrap;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  color: #333;
  border: 1px solid #bbb;
  background: -webkit-linear-gradient(top, #eee 0%, #ddd 100%);
  background: linear-gradient(to bottom, #eee 0%, #ddd 100%);
}
button:hover,
input[type="button"]:hover,
input[type="submit"]:hover,
input[type="reset"]:hover {
  color: #444;
  border: 1px solid #bbb;
  background: -webkit-linear-gradient(top, #e8e8e8 0%, #d8d8d8 100%);
  background: linear-gradient(to bottom, #e8e8e8 0%, #d8d8d8 100%);
}
button:active,
input[type="button"]:active,
input[type="submit"]:active,
input[type="reset"]:active {
  top: 1px;
}
button img,
input[type="button"] img,
input[type="submit"] img,
input[type="reset"] img {
  vertical-align: middle;
}
button span,
input[type="button"] span,
input[type="submit"] span,
input[type="reset"] span {
  text-decoration: none;
  vertical-align: middle;
  white-space: nowrap;
}
button img + span,
input[type="button"] img + span,
input[type="submit"] img + span,
input[type="reset"] img + span {
  margin-left: .4em;
}
button[disabled],
input[disabled][type="button"],
input[disabled][type="submit"],
input[disabled][type="reset"] {
  opacity: 0.5;
  cursor: not-allowed;
}
button[disabled]:active,
input[disabled][type="button"]:active,
input[disabled][type="submit"]:active,
input[disabled][type="reset"]:active {
  top: 0;
}

body {
  position: relative;
  background-color: #fff;
  background-image: none;
  background-repeat: repeat;
  background-attachment: scroll;
  background-position: center top;
  background-size: auto;
  background-origin: padding-box;
  background-clip: border-box;
}

.container {
  margin: 0 auto;
  width: 20rem;
}
@media screen and (min-width: 31.5rem) {
  .container {
    width: 30rem;
  }
}
@media screen and (min-width: 41.5rem) {
  .container {
    width: 40rem;
  }
}
@media screen and (min-width: 61.5rem) {
  .container {
    width: 60rem;
  }
}
@media screen and (min-width: 81.5rem) {
  .container {
    width: 80rem;
  }
}

body,
#content,
#footer {
  margin: 0;
  padding: 0;
  text-align: left;
  clear: both;
}

#header {
  position: relative;
  padding: 6.5em 0 1.625em 0;
  background-color: #ea9462;
  color: #fff;
  text-align: center;
}
#header:after {
  content: "";
  position: absolute;
  left: 50%;
  bottom: -3.25em;
  margin-left: -1.625em;
  border-width: 1.625em;
  border-style: solid;
  border-color: transparent;
  border-top-color: #ea9462;
}
#header h1 {
  line-height: 1.1;
  letter-spacing: -2px;
  color: inherit;
}
#header h1 small {
  display: block;
  font-size: .5em;
  letter-spacing: 0;
  opacity: .5;
}
#header p, #header h1 {
  display: block;
  float: none;
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}
#header a {
  color: #fff;
  text-decoration: underline;
}
#header a:hover {
  color: rgba(255, 255, 255, 0.6);
}

#main:after {
  content: "";
  display: table;
  clear: both;
}
#main section {
  padding: 3.25em 0;
  border-bottom: 1px solid #eee;
  text-align: center;
}
#main section:last-child {
  border: 0;
}

#footer {
  padding: 1.625em 0;
  background-color: #f2f3f5;
  text-align: center;
}
#footer:after {
  content: "";
  display: table;
  clear: both;
}

#nav {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background: rgba(255, 255, 255, 0.95);
  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.07);
  -webkit-transition: all 0.25s;
          transition: all 0.25s;
  z-index: 999;
}
#nav:after {
  content: "";
  display: table;
  clear: both;
}
#nav:hover {
  box-shadow: 0 1px 12px rgba(0, 0, 0, 0.1);
}
#nav ul {
  list-style: none;
  display: none;
  margin: 0;
  padding: 0;
  clear: both;
}
#nav ul.open {
  display: block;
}
#nav li {
  position: relative;
  border-top: 1px solid rgba(0, 0, 0, 0.03);
}
#nav li a {
  position: relative;
  display: block;
  height: 3.5em;
  padding: 0 1.5em;
  line-height: 3.5em;
  color: #bbb;
}
#nav li a:hover {
  color: #444;
}
#nav li a:after {
  position: absolute;
  top: 100%;
  left: 50%;
  display: block;
  width: 0;
  height: 0;
  margin-left: -8px;
  margin-top: -16px;
  height: 0;
  border: 8px solid transparent;
  border-bottom-color: rgba(0, 0, 0, 0.075);
  content: "";
}
#nav li a:only-child:after {
  border: 0;
}
#nav li ul {
  display: none;
}
#nav li li {
  display: block;
  white-space: nowrap;
}
#nav li:hover > ul {
  display: block;
  position: absolute;
  top: 100%;
  left: 50%;
  background-color: #fff;
  width: 10em;
  margin-left: -5em;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.07);
}
#nav li:hover > a:after {
  border-bottom-color: #fff;
}
@media screen and (min-width: 61.5rem) {
  #nav ul {
    display: block;
    clear: none;
  }
  #nav li {
    display: inline-block;
    border: 0;
  }
}

#nav-button {
  float: right;
  width: 2.5em;
  padding: .625em 0;
  border: 0;
  box-shadow: none;
  background: transparent;
  font-size: 1.5em;
  color: #899;
  text-align: center;
}
#nav-button:hover {
  background: rgba(0, 0, 0, 0.03);
}
#nav-button i {
  display: block;
  margin: 0 auto;
  padding: 0;
  width: 1em;
  line-height: 1;
  font-style: normal;
  -webkit-transition: all 0.1s;
          transition: all 0.1s;
}
#nav-button i.open {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}
@media screen and (min-width: 61.5rem) {
  #nav-button {
    display: none;
  }
}

.button {
  display: inline-block;
  padding: .75em 1.25em;
  background: #8cbfde;
  color: #fff !important;
  text-decoration: none !important;
  border: none;
  border-radius: 0;
  box-shadow: none;
  text-shadow: none;
  -webkit-transition: all, .1s;
          transition: all, .1s;
}
.button:hover {
  background: #64a9d3;
  border: none;
}

.example {
  position: relative;
  padding: 1.625em 1.625em 0 1.625em;
  border: 1px solid #eee;
  margin-top: 1.625em;
  text-align: left;
  background-position: center -1px;
  background-size: 100% 26px;
  background-image: -webkit-linear-gradient(top, #fbfbfb 1px, transparent 1px);
  background-image: linear-gradient(to bottom, #fbfbfb 1px, transparent 1px);
}
.example:after {
  content: "";
  display: table;
  clear: both;
}
.example:before {
  content: "Example";
}
.example ~ pre {
  position: relative;
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 1.625em;
  border-top: 0;
}
.example ~ pre:last-child {
  margin-bottom: 1.625em;
}

pre.language-markup:before {
  content: "HTML";
}

pre.language-css:before {
  content: "CSS";
}

.example:before,
pre.language-markup:before,
pre.language-css:before {
  position: absolute;
  text-transform: uppercase;
  text-shadow: none;
  top: -1px;
  left: -1px;
  padding: .25em .5em;
  border: 1px solid #eee;
  background: rgba(0, 0, 0, 0.01);
  color: #cacaca;
  font-size: 12px;
  font-family: Helvetica, Arial, sans-serif;
}

.logo {
  display: block;
  height: 200px;
  width: 200px;
  margin: 0 auto 1.625em auto;
  background-color: #8cbfde;
  background-image: url(/Images/Logo/flamebug-logo-white.svg);
  background-repeat: no-repeat;
  background-position: center 40%;
  background-size: 75%;
  border-radius: 50%;
}

#nav > .logo {
  float: left;
  height: 2.5em;
  width: 2.5em;
  margin: .5em 1em .5em 1em;
  line-height: 3.5em;
  vertical-align: middle;
}

.social {
  display: inline-block;
  height: 2em;
  width: 2em;
  text-indent: -9999px;
  background-repeat: no-repeat;
  background-size: cover;
  opacity: .5;
}
.social + .social {
  margin-left: .25em;
}
.social.twitter {
  background-image: url("/Images/Social/twitter-circle.svg");
}
.social.facebook {
  background-image: url("/Images/Social/facebook-circle.svg");
}
.social.linkedin {
  background-image: url("/Images/Social/linkedin-circle.svg");
}

table th,
table td {
  padding-top: 0.8125em;
  padding-bottom: 0.8125em;
  padding-left: 0.8125em;
  padding-right: 0.8125em;
}

table {
  margin-top: 1.5625em;
  margin-bottom: 1.5625em;
  border: 1px solid #eee;
  border-left: 0;
}
table th,
table td {
  border-left: 1px solid #eee;
}

table tbody > tr:nth-child(odd) > td,
table tbody > tr:nth-child(odd) > th {
  background-color: rgba(0, 0, 0, 0.01);
}



/*# sourceMappingURL=data:application/json;base64, */