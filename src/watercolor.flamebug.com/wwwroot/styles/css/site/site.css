/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */@import url(http://fonts.googleapis.com/css?family=Roboto:400,300,100);html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}body{line-height:1.625;font-size:1em;font-family:Roboto,sans-serif;font-weight:300;color:#4e585b}p{margin-top:1.625em;margin-bottom:1.625em}h1{font-size:3.4375em;line-height:1.41818;margin-top:.47273em;margin-bottom:.47273em}h1,h2{font-family:Roboto,sans-serif;font-weight:500;color:inherit}h2{font-size:2.625em;line-height:1.2381;margin-top:.61905em;margin-bottom:.61905em}h3{font-size:2.125em;line-height:1.52941;margin-top:.76471em;margin-bottom:.76471em}h3,h4{font-family:Roboto,sans-serif;font-weight:500;color:inherit}h4{font-size:1.625em;line-height:1;margin-top:1em;margin-bottom:1em}h5{font-size:1.3125em;line-height:1.2381;margin-top:1.2381em;margin-bottom:1.2381em}h5,h6{font-family:Roboto,sans-serif;font-weight:500;color:inherit}h6{font-size:1em;line-height:1.625;margin-top:1.625em;margin-bottom:1.625em}a{color:#25aae1;text-decoration:none;-webkit-transition:all .1s linear;transition:all .1s linear}a:hover{color:#058ac1}dl,ol,ul{font-size:1em;line-height:1.625;margin-top:1.625em;margin-bottom:1.625em}dt{font-weight:700}blockquote,dd+dt{margin-top:1.625em}blockquote{margin-bottom:1.625em;padding-left:1em;border-left-width:.25em;border-left-style:solid;border-left-color:#eee;border-radius:0}code,kbd,pre,samp,tt{font-size:1em;font-family:monospace;font-weight:400;color:inherit;direction:ltr;text-align:left;word-spacing:normal;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;vertical-align:top}pre{position:relative;overflow:auto;margin-top:1.5625em;margin-bottom:1.5625em;padding:0 .5em;line-height:1.625;border:1px solid #eee;border-radius:0;background:rgba(0,0,0,.01);white-space:pre}pre code{padding:0;border:0;background:transparent}code{padding:.1666em .3333em;border:1px solid #eee;border-radius:0;background:rgba(0,0,0,.01)}img{max-width:100%}hr,img{border-color:#eee}table{max-width:100%;width:100%;margin-top:1.625em;margin-bottom:1.625em;border-collapse:separate}table td,table th{padding:0 .8125em;line-height:1.5625;border-top-width:1px;border-top-style:solid;border-top-color:#eee;text-align:left;vertical-align:top}table th{font-weight:700;vertical-align:bottom}table caption+thead tr:first-child td,table caption+thead tr:first-child th,table colgroup+thead tr:first-child td,table colgroup+thead tr:first-child th,table thead:first-child tr:first-child td,table thead:first-child tr:first-child th{line-height:1.625;border-top:0}table tbody+tbody{border-top-width:2px;border-top-style:solid;border-top-color:#eee}table table{background-color:#fff}fieldset{margin:1.5625em 0;padding:0 1.625em;border-color:#eee}input[type=color],input[type=date],input[type=datetime-local],input[type=datetime],input[type=email],input[type=file],input[type=month],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=time],input[type=url],input[type=week],select,textarea{box-sizing:border-box;margin:-1px 0;padding:0 .375em;border:1px solid #eee;border-radius:.2em;background-color:#fff;font:inherit;color:#777}input[type=color]:focus,input[type=date]:focus,input[type=datetime-local]:focus,input[type=datetime]:focus,input[type=email]:focus,input[type=file]:focus,input[type=month]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=time]:focus,input[type=url]:focus,input[type=week]:focus,select:focus,textarea:focus{color:#000}input:invalid,textarea:invalid{border-color:red}select{padding:.125em 0 .0625em .375em}button,input[type=button],input[type=reset],input[type=submit]{display:inline-block;position:relative;padding:0 .75em;margin:-1px 0;border-radius:.25em;box-shadow:inset 0 1px hsla(0,0%,100%,.4),0 1px .2em rgba(0,0,0,.1);font-size:inherit;font-weight:inherit;text-decoration:none;text-shadow:0 1px 0 hsla(0,0%,100%,.3);line-height:1.625;cursor:pointer;text-align:center;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:#333;border:1px solid #bbb;background:-webkit-linear-gradient(top,#eee,#ddd);background:linear-gradient(180deg,#eee 0,#ddd)}button:hover,input[type=button]:hover,input[type=reset]:hover,input[type=submit]:hover{color:#444;border:1px solid #bbb;background:-webkit-linear-gradient(top,#e8e8e8,#d8d8d8);background:linear-gradient(180deg,#e8e8e8 0,#d8d8d8)}button:active,input[type=button]:active,input[type=reset]:active,input[type=submit]:active{top:1px}button img,input[type=button] img,input[type=reset] img,input[type=submit] img{vertical-align:middle}button span,input[type=button] span,input[type=reset] span,input[type=submit] span{text-decoration:none;vertical-align:middle;white-space:nowrap}button img+span,input[type=button] img+span,input[type=reset] img+span,input[type=submit] img+span{margin-left:.4em}button[disabled],input[disabled][type=button],input[disabled][type=reset],input[disabled][type=submit]{opacity:.5;cursor:not-allowed}button[disabled]:active,input[disabled][type=button]:active,input[disabled][type=reset]:active,input[disabled][type=submit]:active{top:0}body{position:relative;background-color:#fff;background-image:none;background-repeat:repeat;background-attachment:scroll;background-position:center top;background-size:auto;background-origin:padding-box;background-clip:border-box}.container{box-sizing:border-box;margin:0 auto;padding-right:.75rem;padding-left:.75rem;width:20rem}@media screen and (min-width:31.5rem){.container{width:30rem}}@media screen and (min-width:41.5rem){.container{width:40rem}}@media screen and (min-width:61.5rem){.container{width:60rem}}@media screen and (min-width:81.5rem){.container{width:80rem}}#content,#footer,body{margin:0;padding:0;text-align:left;clear:both}#header{position:relative;padding:6.5em 0;background-image:url(/images/background.jpg);background-position:center;background-size:150%;color:#fff;text-align:center}#header h1{font-size:5em;font-weight:700;line-height:1.2;letter-spacing:-2px;text-shadow:0 .1em .2em rgba(0,0,0,.3);color:inherit}#header h1 small{display:block;font-size:.5em;font-weight:500;letter-spacing:-1px;text-shadow:0 .05em .15em rgba(0,0,0,.2)}#header a{color:#fff;text-decoration:underline}#header a:hover{color:hsla(0,0%,100%,.6)}#main section{padding:3.25em 0;border-bottom:1px solid #eee;text-align:center}#main section:last-child{border:0}#footer{padding:1.625em 0;background-color:#f2f3f5;text-align:center}#nav{position:fixed;top:0;left:0;right:0;-webkit-transition:all .25s;transition:all .25s;z-index:1}#nav ul{list-style:none;display:none;margin:0;padding:0;clear:both}#nav ul.open{display:block}#nav li{position:relative;border-top:1px solid rgba(0,0,0,.03)}#nav li a{position:relative;display:block;height:3.5em;padding:0 1.5em;line-height:3.5em;color:#bbb}#nav li a:hover{color:#444}#nav li a:after{position:absolute;top:100%;left:50%;display:block;width:0;margin-left:-8px;margin-top:-16px;height:0;border:8px solid transparent;border-bottom-color:rgba(0,0,0,.075);content:""}#nav li a:only-child:after{border:0}#nav li ul{display:none}#nav li li{display:block;white-space:nowrap}#nav li:hover>ul{display:block;position:absolute;top:100%;left:50%;background-color:#fff;width:10em;margin-left:-5em;box-shadow:0 6px 12px rgba(0,0,0,.07)}#nav li:hover>a:after{border-bottom-color:#fff}#nav-button{float:right;width:2.5em;padding:.625em 0;border:0;box-shadow:none;background:transparent;font-size:1.5em;color:#899;text-align:center}#nav-button:hover{background:rgba(0,0,0,.03)}#nav-button i{display:block;margin:0 auto;padding:0;width:1em;line-height:1;font-style:normal;-webkit-transition:all .1s;transition:all .1s}#nav-button i.open{-webkit-transform:rotate(45deg);transform:rotate(45deg)}code[class*=language-],pre[class*=language-]{color:#000;text-shadow:0 1px #fff;font-family:Consolas,Monaco,Andale Mono,monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-]::-moz-selection,code[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection{text-shadow:none;background:#b3d4fc}code[class*=language-]::selection,code[class*=language-] ::selection,pre[class*=language-]::selection,pre[class*=language-] ::selection{text-shadow:none;background:#b3d4fc}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#708090}.token.punctuation{color:#999}.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#905}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#690}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#a67f59;background:hsla(0,0%,100%,.5)}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.function{color:#dd4a68}.token.important,.token.regex,.token.variable{color:#e90}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.alert{display:none;padding:8px 14px;margin-bottom:20px;text-shadow:0 1px 0 hsla(0,0%,100%,.5);background-color:#fcf8e3;border:1px solid #fbeed5;border-radius:4px}.alert.show{display:block}.alert.success{color:#468847;background-color:#dff0d8;border-color:#d6e9c6}.alert.error{color:#b94a48;background-color:#f2dede;border-color:#eed3d7}.button{display:inline-block;padding:.75em 1.25em;background-color:#8cbfde;color:#fff!important;text-decoration:none!important;border:none;border-radius:.25em;box-shadow:none;font-size:1.125em;font-weight:500;text-shadow:none;-webkit-transition:all,.1s;transition:all,.1s}.button.alternate,.button:hover{background-color:#ea9462}.button.alternate:hover{background-color:#8cbfde}.button.ghost{padding:.5em 1em;border:.125em solid hsla(0,0%,100%,.6);font-weight:700;background-color:transparent;text-shadow:0 .1em .1em rgba(0,0,0,.1)}.button.ghost:hover{background-color:#fff;color:#555!important;text-shadow:none}.example{position:relative;padding:1.625em 1.625em 0;border:1px solid #eee;margin-top:1.625em;text-align:left;background-position:center -1px;background-size:100% 26px;background-image:-webkit-linear-gradient(top,#fbfbfb 1px,transparent 0);background-image:linear-gradient(180deg,#fbfbfb 1px,transparent 0)}.example:after{content:"";display:table;clear:both}pre[class*=language-]{position:relative;margin-top:1.625em;margin-bottom:0;padding-top:1.625em}.example:before,pre[class*=language-]:before{position:absolute;text-transform:uppercase;text-shadow:none;top:-1px;left:-1px;padding:.25em .5em;border:1px solid #eee;background:rgba(0,0,0,.01);color:#cacaca;font-size:12px;font-family:Helvetica,Arial,sans-serif}.example~pre[class*=language-],pre[class*=language-]~pre[class*=language-]{margin-top:0;border-top:0}.example:before,pre.language-markup:before{content:"HTML"}pre.language-css:before{content:"SCSS"}.logo{display:block;height:100px;width:100px;margin:0 auto 1.625em;background-color:#8cbfde;background-image:url(/Images/Logo/flamebug-logo-white.svg);background-repeat:no-repeat;background-position:center 40%;background-size:75%;border-radius:50%}#nav>.logo{float:left;height:2.5em;width:2.5em;margin:.5em 1em;line-height:3.5em;vertical-align:middle}.social{display:inline-block;height:2em;width:2em;text-indent:-9999px;background-repeat:no-repeat;background-size:cover;opacity:.5}.social+.social{margin-left:.25em}.social.twitter{background-image:url(/Images/Social/twitter-circle.svg)}.social.facebook{background-image:url(/Images/Social/facebook-circle.svg)}.social.linkedin{background-image:url(/Images/Social/linkedin-circle.svg)}table td,table th{padding:.8125em}table{margin-top:1.5625em;margin-bottom:1.5625em;border:1px solid #eee;border-left:0}table td,table th{border-left:1px solid #eee}table tbody>tr:nth-child(odd)>td,table tbody>tr:nth-child(odd)>th{background-color:rgba(0,0,0,.01)}
/*# sourceMappingURL=data:application/json;base64, */
