h2 > a {
  color: inherit;
}

#header .button {
  font-size: 1.125em;
  font-weight: bold;
}

#introduction ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  -webkit-align-content: stretch;
      -ms-flex-line-pack: stretch;
          align-content: stretch;
  margin-right: -0.75rem;
  margin-left: -0.75rem;
}
#introduction ul li {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  margin-left: 0.75rem;
  margin-right: 0.75rem;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-flex-shrink: 1;
      -ms-flex-negative: 1;
          flex-shrink: 1;
  -webkit-align-self: auto;
      -ms-flex-item-align: auto;
          align-self: auto;
}
#introduction ul li h3 {
  margin-bottom: 0;
}
#introduction ul li p {
  margin-top: 0;
}
@media screen and (min-width: 41.5rem) {
  #introduction ul li {
    -webkit-flex-basis: auto;
        -ms-flex-preferred-size: auto;
            flex-basis: auto;
  }
}
@media screen and (min-width: 41.5rem) {
  #introduction ul {
    -webkit-flex-wrap: nowrap;
        -ms-flex-wrap: nowrap;
            flex-wrap: nowrap;
  }
}

#tools {
  background-color: #2f383d;
  color: #fff;
}
#tools ul {
  list-style: none;
  margin: 1.625em 0;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  -webkit-align-content: stretch;
      -ms-flex-line-pack: stretch;
          align-content: stretch;
  margin-right: -0.75rem;
  margin-left: -0.75rem;
}
#tools ul li {
  position: relative;
  margin-top: 1.625em;
  -webkit-flex-basis: 8.5rem;
      -ms-flex-preferred-size: 8.5rem;
          flex-basis: 8.5rem;
  margin-left: 0.75rem;
  margin-right: 0.75rem;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-flex-shrink: 1;
      -ms-flex-negative: 1;
          flex-shrink: 1;
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
}
#tools ul li img {
  width: 6em;
  opacity: .8;
}
@media screen and (min-width: 31.5rem) {
  #tools ul li {
    -webkit-flex-basis: 13.5rem;
        -ms-flex-preferred-size: 13.5rem;
            flex-basis: 13.5rem;
  }
}
@media screen and (min-width: 41.5rem) {
  #tools ul li {
    -webkit-flex-basis: auto;
        -ms-flex-preferred-size: auto;
            flex-basis: auto;
  }
}
@media screen and (min-width: 61.5rem) {
  #tools ul li img {
    width: 7em;
  }
}
@media screen and (min-width: 41.5rem) {
  #tools ul {
    -webkit-flex-wrap: nowrap;
        -ms-flex-wrap: nowrap;
            flex-wrap: nowrap;
  }
}
#tools .button {
  font-size: 1.125em;
  font-weight: bold;
  background-color: #ea9462;
}

#contribute .button {
  font-size: 1.125em;
  font-weight: bold;
}



/*# sourceMappingURL=data:application/json;base64, */