h2 > a {
  color: inherit;
}

#header .button {
  font-size: 1.125em;
  font-weight: bold;
}

#introduction header {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-flex-shrink: 1;
      -ms-flex-negative: 1;
          flex-shrink: 1;
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}
#introduction ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
#introduction ul:after {
  content: "";
  display: table;
  clear: both;
}
#introduction ul li {
  box-sizing: border-box;
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-flex-shrink: 1;
      -ms-flex-negative: 1;
          flex-shrink: 1;
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}
@media screen and (min-width: 41.5rem) {
  #introduction ul li {
    float: left;
    width: 33.3%;
    margin: 1.625em 0;
    padding: 1.5rem;
  }
}
#introduction ul li h3 {
  margin-bottom: 0;
}
#introduction ul li p {
  margin-top: 0;
}

#tools {
  background-color: #2f383d;
  color: #fff;
}
#tools header {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-flex-shrink: 1;
      -ms-flex-negative: 1;
          flex-shrink: 1;
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}
#tools ul {
  list-style: none;
  margin: 1.625em 0;
  padding: 0;
}
#tools ul:after {
  content: "";
  display: table;
  clear: both;
}
#tools ul li {
  position: relative;
  box-sizing: border-box;
  float: left;
  width: 50%;
  height: 10em;
  padding: 1.5rem;
  margin: 0.8125em 0;
}
#tools ul li img {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 6em;
  opacity: .8;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}
@media screen and (min-width: 31.5rem) {
  #tools ul li img {
    width: 7em;
  }
}
@media screen and (min-width: 61.5rem) {
  #tools ul li {
    width: 25%;
    margin: 1.625em 0;
  }
}
#tools .button {
  font-size: 1.125em;
  font-weight: bold;
  background-color: #ea9462;
}

#contribute .button {
  font-size: 1.125em;
  font-weight: bold;
}



/*# sourceMappingURL=data:application/json;base64, */